pipeline:
  # Step 1: Read a non-existent file (will fail, but continue)
  - name: read_file
    id: reader_fail
    config:
      path: "non_existent_file.json"
    continue_on_error: true
    retry_attempts: 2
    timeout_seconds: 5

  # Step 2: Read stdin instead (fallback)
  - name: read_stdin
    id: reader_stdin
    config:
      prompt: "Enter some JSON data:"

  # Step 3: Parse JSON with retry
  - name: parse_json
    id: parser
    retry_attempts: 1

  # Step 4: Format as CSV (might fail due to invalid data structure)
  - name: format_csv
    id: formatter
    config:
      headers: true
      delimiter: ","
    continue_on_error: false
    retry_attempts: 0
    timeout_seconds: 10

  # Step 5: Write result (won't execute if formatter fails)
  - name: write_stdout
    id: writer

metadata:
  name: "Error Handling Test Pipeline"
  description: "Tests retry, timeout, and continue-on-error features"
  version: "1.0.0"
  author: "Oxide Flow"
